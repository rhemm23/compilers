bool b;
int c;
int d;
int e;
struct data {
  int a;
  int b;
  int c;
}
struct data z;
void parse (int a, bool b) {
  receive >> a(int);
  ret;
}
int main () {
  b(bool) = (c(int) == 8);
  b(bool) = (c(int) != 9);
  b(bool) = (c(int) > 10);
  b(bool) = (c(int) < 11);
  b(bool) = (c(int) >= 0);
  b(bool) = (c(int) <= 12);
  c(int) = (d(int) + e(int));
  c(int) = (d(int) - e(int));
  c(int) = (d(int) / e(int));
  c(int) = (d(int) * e(int));
  b(bool) = (!b(bool));
  c(int) = (-c(int));
  receive >> b(bool);
  receive >> (c(int) * 8);
  receive >> "test";
  receive >> main(->int)();
  receive >> b(bool);
  receive >> c(int);
  if (b(bool)) {
    c(int) = (c(int) * 8);
  }
  if ((!b(bool))) {
    c(int) = (c(int) / 8);
  } else {
    c(int) = (c(int) + 10);
  }
  while (tru) {
    repeat (c(int)) {
      receive >> "x";
    }
  }
  parse(int,bool->void)(8, tru);
  parse(int,bool->void)(c(int), (!fls));
  b(bool) = (tru && b(bool));
  b(bool) = (fls || (!tru));
  b(bool) = ((b(bool) = tru) && (!(!(!fls))));
  ++z(z).b(int);
  --z(z).a(int);
  ret z(z).c(int);
}
